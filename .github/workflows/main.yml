name: Deploy Worker and Pages

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Wrangler
        run: npm install --save-dev wrangler

      # ====================================================================
      # UPDATED DEBUGGING STEP: Checks the NEW secret names
      # ====================================================================
      - name: Verify Secrets are Loaded
        env:
          API_TOKEN_SET: ${{ secrets.CF_API_TOKEN != '' }}
          ACCOUNT_ID_SET: ${{ secrets.CF_ACCOUNT_ID != '' }}
        run: |
          echo "Cloudflare API Token (CF_API_TOKEN) is set: $API_TOKEN_SET"
          echo "Cloudflare Account ID (CF_ACCOUNT_ID) is set: $ACCOUNT_ID_SET"
          if [ "$API_TOKEN_SET" != "true" ]; then
            echo "::error::CF_API_TOKEN secret is not set or empty in GitHub Secrets. Please check the name."
            exit 1
          fi
          if [ "$ACCOUNT_ID_SET" != "true" ]; then
            echo "::error::CF_ACCOUNT_ID secret is not set or empty in GitHub Secrets. Please check the name."
            exit 1
          fi

      # ====================================================================
      # UPDATED DEPLOYMENT STEP: Uses the NEW secret names
      # ====================================================================
      - name: Deploy Cloudflare Worker
        env:
          # Map the new secret names to the environment variables that Wrangler expects
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          # Use npx to ensure we use the locally installed wrangler
          echo "${{ secrets.GOOGLE_CLIENT_ID }}" | npx wrangler secret put GOOGLE_CLIENT_ID
          echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | npx wrangler secret put GOOGLE_CLIENT_SECRET
          
          # Deploy the worker. Wrangler will automatically use the CLOUDFLARE_... env vars.
          npx wrangler deploy

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload frontend artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
